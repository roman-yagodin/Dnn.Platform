<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StopWords.Text" xml:space="preserve">
    <value>Стоп-слова</value>
  </data>
  <data name="Synonyms.Text" xml:space="preserve">
    <value>Синонимы</value>
  </data>
  <data name="ModifiedBy.Text" xml:space="preserve">
    <value>Изменил</value>
  </data>
  <data name="ModifiedOn.Text" xml:space="preserve">
    <value>Изменено</value>
  </data>
  <data name="SynonymsTags.Text" xml:space="preserve">
    <value>Синонимы</value>
  </data>
  <data name="AddSynonymsGroup.Text" xml:space="preserve">
    <value>Добавить группу синонимов</value>
  </data>
  <data name="SynonymsTagDuplicated.Text" xml:space="preserve">
    <value>Уже используется в другой группе синонимов.</value>
  </data>
  <data name="SynonymsTagRequired.Text" xml:space="preserve">
    <value>Требуется как минимум одна метка-синоним.</value>
  </data>
  <data name="AddStopWords.Text" xml:space="preserve">
    <value>Добавить слово</value>
  </data>
  <data name="NoStopWords.Text" xml:space="preserve">
    <value>Не найдено шумовых слов для выбранного портала/языка</value>
  </data>
  <data name="lblStopwordsCultureList.Help" xml:space="preserve">
    <value>Выберите язык для поиска шумовых слов.</value>
  </data>
  <data name="lblStopwordsCultureList.Text" xml:space="preserve">
    <value>Выберите язык:</value>
  </data>
  <data name="Actions.Text" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="introIgnoreWords.Text" xml:space="preserve">
    <value>При выполнении поиска мы часто хотим избежать определенных слов, которые могут снизить ценность результатов поиска. Эта функция позволяет добавлять слова, которые будут игнорироваться поисковыми запросами.</value>
  </data>
  <data name="introSynonyms.Text" xml:space="preserve">
    <value>Очень часто при поиске мы не знаем точно, что именно мы ищем. Иногда мы ищем слова, которые являются синонимами в надежде найти некоторый термин. Эта функция позволяет создавать синонимические отношения между терминами.</value>
  </data>
  <data name="General.Text" xml:space="preserve">
    <value>Общие</value>
  </data>
  <data name="btnReIndex.Text" xml:space="preserve">
    <value>Переиндексировать содержимое</value>
  </data>
  <data name="MessageReIndexWarning.Text" xml:space="preserve">
    <value>&lt;div align="left"&gt;
        &lt;p&gt;&lt;b&gt;Переиндексирование&lt;/b&gt; удаляет все существующее содержимое поискового индекса и затем переиндексирует все содержимое сайта заново. &lt;br/&gt;
        Переиндексирование выполняется как часть запланированной задачи краулера поиска. &lt;br/&gt;Краулер поисковой системы должен быть запущен вручную через Хост &gt; Планировщик для немедленного запуска переиндексирования. Переиндексирование выполняется только для текущего сайта.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Осторожно&lt;/b&gt; - Переиндексирование должно выполняться только в часы минимальной внешней нагрузки на сайты, так как эта процедура может сильно нагружать процессор.&lt;/p&gt;&lt;/div&gt;</value>
  </data>
  <data name="ReIndexConfirmationCancel.Text" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ReIndexConfirmationMessage.Text" xml:space="preserve">
    <value>Переиндексирование приведет к удалению текущего содержимого хранилища поискового индекса. Переиндексирование выполняется краулером поисковой системы и зависит от расписания его запуска. Уверены, что хотите продолжить?</value>
  </data>
  <data name="ReIndexConfirmationTitle.Text" xml:space="preserve">
    <value>Подтвердите переиндексирование</value>
  </data>
  <data name="ReIndexConfirmationYes.Text" xml:space="preserve">
    <value>Продолжить</value>
  </data>
  <data name="lblSynonymsCultureList.Help" xml:space="preserve">
    <value>Выберите язык для группы синонимов </value>
  </data>
  <data name="lblSynonymsCultureList.Text" xml:space="preserve">
    <value>Выберите язык:</value>
  </data>
  <data name="DefaultStopwordGroup.Text" xml:space="preserve">
    <value>без,вам,вас,весь,весь,все,всего,всех,дабы,даже,для,его,еще,ещё,затем,зачем,или,итого,как,коли,которая,которое,который,которых,лишь,меня,мне,над,нет,они,откуда,под,после,потом,почему,при,так,таким,только,тот,что</value>
  </data>
  <data name="DefaultSynonymGroup.Text" xml:space="preserve">
    <value>dnn,dotnetnuke</value>
  </data>
  <data name="ControlTitle_.Text" xml:space="preserve">
    <value>Администрирование поиска</value>
  </data>
</root>
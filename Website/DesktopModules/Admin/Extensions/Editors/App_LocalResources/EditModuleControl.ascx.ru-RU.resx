<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plModule.Text" xml:space="preserve">
    <value>Модуль:</value>
  </data>
  <data name="plDefinition.Text" xml:space="preserve">
    <value>Определение:</value>
  </data>
  <data name="plKey.Text" xml:space="preserve">
    <value>Ключ:</value>
  </data>
  <data name="plKey.Help" xml:space="preserve">
    <value>Укажите уникальное имя для идентификации этого элемента управления в рамках модуля</value>
  </data>
  <data name="plTitle.Text" xml:space="preserve">
    <value>Заголовок:</value>
  </data>
  <data name="plTitle.Help" xml:space="preserve">
    <value>Укажите заголовок данного элемента управления. Он будет показан в заголовке модуля, если позволяет выбранная тема.</value>
  </data>
  <data name="plSource.Text" xml:space="preserve">
    <value>Исходный файл:</value>
  </data>
  <data name="plSource.Help" xml:space="preserve">
    <value>Выберите исходный файл для этого элемента управления, или введите имя типа.</value>
  </data>
  <data name="plSourceFolder.Text" xml:space="preserve">
    <value>Папка исходного файла:</value>
  </data>
  <data name="plSourceFolder.Help" xml:space="preserve">
    <value>Выберите папку с исходным файлом элемента управления.</value>
  </data>
  <data name="plType.Text" xml:space="preserve">
    <value>Тип:</value>
  </data>
  <data name="plType.Help" xml:space="preserve">
    <value>Выберите тип элемента управления модуля из списка.</value>
  </data>
  <data name="Skin.Text" xml:space="preserve">
    <value>Объект темы</value>
  </data>
  <data name="Anonymous.Text" xml:space="preserve">
    <value>Анонимный</value>
  </data>
  <data name="View.Text" xml:space="preserve">
    <value>Просмотр</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Редактор</value>
  </data>
  <data name="Admin.Text" xml:space="preserve">
    <value>Админ</value>
  </data>
  <data name="Host.Text" xml:space="preserve">
    <value>Хост</value>
  </data>
  <data name="plViewOrder.Text" xml:space="preserve">
    <value>Порядок показа:</value>
  </data>
  <data name="plViewOrder.Help" xml:space="preserve">
    <value>Укажите порядок показа этого элемента управления в списке элементов управления определения модуля.</value>
  </data>
  <data name="plIcon.Text" xml:space="preserve">
    <value>Значок:</value>
  </data>
  <data name="plIcon.Help" xml:space="preserve">
    <value>Выберите значок для данного элемента управления. Он будет показан в заголовке модуля, если позволяет выбранная тема.</value>
  </data>
  <data name="plHelpURL.Text" xml:space="preserve">
    <value>URL cправки:</value>
  </data>
  <data name="plHelpURL.Help" xml:space="preserve">
    <value>Вы можете указать ссылку на файл справки для этого элемента управления.  Эта ссылка будет добавлена в меню действий модуля.</value>
  </data>
  <data name="plModule.Help" xml:space="preserve">
    <value>Это дружественное название модуля.</value>
  </data>
  <data name="plDefinition.Help" xml:space="preserve">
    <value>Это название определения модуля</value>
  </data>
  <data name="ControlTitle_editcontrol.Text" xml:space="preserve">
    <value>Редактировать элемент управления модуля</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;О модуле Module Definitions&lt;/h1&gt;
&lt;p&gt;Администратор хостинга может управлять модулями, установленными и доступными в системе.&lt;/p&gt;</value>
  </data>
  <data name="AddControl.ErrorMessage" xml:space="preserve">
    <value>Уже существует элемент управления модуля с таким же ключом и исходным файлом.</value>
  </data>
  <data name="MissingSource.ErrorMessage" xml:space="preserve">
    <value>Укажите исходный файл для элемента управления модуля.</value>
  </data>
  <data name="DuplicateKey.ErrorMessage" xml:space="preserve">
    <value>Уже существует элемент управления модуля с таким же значением ключа в этом определении модуля.</value>
  </data>
  <data name="plSupportsPartialRendering.Text" xml:space="preserve">
    <value>Поддерживает частичную отрисовку:</value>
  </data>
  <data name="plSupportsPartialRendering.Help" xml:space="preserve">
    <value>Этот флаг указывает, поддерживает ли модуль частичную отрисовку с использованием AJAX.</value>
  </data>
  <data name="supportsModalPopUpsLabel.Help" xml:space="preserve">
    <value>Этот флаг показывает, поддерживает ли элемент управления модуля модальные всплывающие окна.</value>
  </data>
  <data name="supportsModalPopUpsLabel.Text" xml:space="preserve">
    <value>Поддерживает всплывающие окна:</value>
  </data>
</root>

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmdExecute.Text" xml:space="preserve">
    <value>Выполнить сценарий</value>
  </data>
  <data name="cmdExecute.ToolTip" xml:space="preserve">
    <value>Может содержать {директивы} и /*комментарии*/</value>
  </data>
  <data name="QueryError.Text" xml:space="preserve">
    <value>Данный запрос содержит ошибку!</value>
  </data>
  <data name="QuerySuccess.Text" xml:space="preserve">
    <value>Запрос успешно выполнен!</value>
  </data>
  <data name="ControlTitle_.Text" xml:space="preserve">
    <value>SQL</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;О модуле SQL&lt;/h1&gt;&lt;p&gt;С помощью этого модуля администратор хостинга может исполнять запросы SQL к базе данных.&lt;/p&gt;</value>
  </data>
  <data name="plSqlScript.Text" xml:space="preserve">
    <value>Файл SQL:</value>
  </data>
  <data name="plSqlScript.Help" xml:space="preserve">
    <value>Подгрузить содержимое файла в окно SQL.</value>
  </data>
  <data name="cmdUpload.Text" xml:space="preserve">
    <value>Загрузить</value>
  </data>
  <data name="cmdUpload.ToolTip" xml:space="preserve">
    <value>Загрузить выбранный файл.</value>
  </data>
  <data name="plConnection.Text" xml:space="preserve">
    <value>Подключение:</value>
  </data>
  <data name="plConnection.Help" xml:space="preserve">
    <value>Выберите строку подключения к базе данных. Список сформирован на основании данных в файла web.config.</value>
  </data>
  <data name="NoDataReturned.Text" xml:space="preserve">
    <value>Запрос не вернут данных.</value>
  </data>
  <data name="scriptLabel.Text" xml:space="preserve">
    <value>Сценарий</value>
  </data>
  <data name="scriptLabel.Help" xml:space="preserve">
    <value>Введите код SQL, который необходимо исполнить. Можно также использовать несколько операторов SELECT для получения нескольких наборов данных.</value>
  </data>
  <data name="errorLabel.Help" xml:space="preserve">
    <value>Сервер SQL вернул ошибку после исполнения запроса SQL.</value>
  </data>
  <data name="errorLabel.Text" xml:space="preserve">
    <value>Подробнее об ошибке</value>
  </data>
  <data name="CnnStringNotFound.Text" xml:space="preserve">
    <value>Запрос был загружен, но связанное соединение ("{0}") не было найдено. Вместо него будет использоваться соединение по умолчанию "SiteSqlServer".</value>
  </data>
  <data name="Deleted.Text" xml:space="preserve">
    <value>Запрос успешно удален.</value>
  </data>
  <data name="lblSavedQuery.Help" xml:space="preserve">
    <value>Вы можете выбрать сохраненный запрос и запустить его, или же изменить и сохранить снова. Вы также можете создать новый запрос.</value>
  </data>
  <data name="lblSavedQuery.Text" xml:space="preserve">
    <value>Запросы:</value>
  </data>
  <data name="btDelete.Text" xml:space="preserve">
    <value>Удалить запрос</value>
  </data>
  <data name="lnkLoad.Text" xml:space="preserve">
    <value>Загрузить запрос</value>
  </data>
  <data name="btSaveQuery.Text" xml:space="preserve">
    <value>Сохранить запрос</value>
  </data>
  <data name="NewQuery.Text" xml:space="preserve">
    <value>&lt; Новый запрос &gt;</value>
  </data>
  <data name="NoScript.Text" xml:space="preserve">
    <value>Введите или загрузите запрос, который требуется запустить.</value>
  </data>
  <data name="SaveDialogTitle.Text" xml:space="preserve">
    <value>Сохранить запрос как...</value>
  </data>
  <data name="lblName.Help" xml:space="preserve">
    <value>Дайте имя сохраняемому запросу.</value>
  </data>
  <data name="lblName.Text" xml:space="preserve">
    <value>Имя:</value>
  </data>
  <data name="lnkSave.Text" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="NoName.Text" xml:space="preserve">
    <value>Укажите имя запроса.</value>
  </data>
  <data name="Saved.Text" xml:space="preserve">
    <value>Запрос успешно сохранен.</value>
  </data>
  <data name="CopyToClipboard.Text" xml:space="preserve">
    <value>Копировать в буфер обмена</value>
  </data>
  <data name="CopyText.Text" xml:space="preserve">
    <value>Результат скопирован в буфер обмена.</value>
  </data>
  <data name="NumRowsReturned.Text" xml:space="preserve">
    <value>запрос вернул {0} записей</value>
  </data>
  <data name="ResultTitle.Text" xml:space="preserve">
    <value>Запрос</value>
  </data>
  <data name="AllRows.Text" xml:space="preserve">
    <value>Все</value>
  </data>
  <data name="CopyButtonAlt.Text" xml:space="preserve">
    <value>Копировать в буфер обмена</value>
  </data>
  <data name="CSVButtonAlt.Text" xml:space="preserve">
    <value>Экспорт в CSV</value>
  </data>
  <data name="PDFButtonAlt.Text" xml:space="preserve">
    <value>Экспорт в PDF</value>
  </data>
  <data name="Placeholder.Text" xml:space="preserve">
    <value>Введите запрос SQL...</value>
  </data>
  <data name="PopupButtonAlt.Text" xml:space="preserve">
    <value>Открыть во всплывающем окне</value>
  </data>
  <data name="XLSButtonAlt.Text" xml:space="preserve">
    <value>Экспорт в Excel</value>
  </data>
  <data name="CopyTitle.Text" xml:space="preserve">
    <value>Результат запроса SQL</value>
  </data>
  <data name="sFirst.Text" xml:space="preserve">
    <value>Первая</value>
  </data>
  <data name="sInfo.Text" xml:space="preserve">
    <value>Показаны записи с _START_ по _END_ из _TOTAL_</value>
  </data>
  <data name="sInfoFiltered.Text" xml:space="preserve">
    <value>(отфильтровано из всего _MAX_ записей)</value>
  </data>
  <data name="sLast.Text" xml:space="preserve">
    <value>Последняя</value>
  </data>
  <data name="sLengthMenu.Text" xml:space="preserve">
    <value>Показывать _MENU_ записей</value>
  </data>
  <data name="sLoadingRecords.Text" xml:space="preserve">
    <value>Загрузка...</value>
  </data>
  <data name="sNext.Text" xml:space="preserve">
    <value>След.</value>
  </data>
  <data name="sPrevious.Text" xml:space="preserve">
    <value>Пред.</value>
  </data>
  <data name="sProcessing.Text" xml:space="preserve">
    <value>Обработка...</value>
  </data>
  <data name="sSearch.Text" xml:space="preserve">
    <value>Поиск:</value>
  </data>
  <data name="sInfoEmpty.Text" xml:space="preserve">
    <value>Нет записей для отображения.</value>
  </data>
</root>
